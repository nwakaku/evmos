// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AskCanceled extends ethereum.Event {
  get params(): AskCanceled__Params {
    return new AskCanceled__Params(this);
  }
}

export class AskCanceled__Params {
  _event: AskCanceled;

  constructor(event: AskCanceled) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ask(): AskCanceledAskStruct {
    return changetype<AskCanceledAskStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class AskCanceledAskStruct extends ethereum.Tuple {
  get seller(): Address {
    return this[0].toAddress();
  }

  get sellerFundsRecipient(): Address {
    return this[1].toAddress();
  }

  get askCurrency(): Address {
    return this[2].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[3].toI32();
  }

  get askPrice(): BigInt {
    return this[4].toBigInt();
  }
}

export class AskCreated extends ethereum.Event {
  get params(): AskCreated__Params {
    return new AskCreated__Params(this);
  }
}

export class AskCreated__Params {
  _event: AskCreated;

  constructor(event: AskCreated) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ask(): AskCreatedAskStruct {
    return changetype<AskCreatedAskStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class AskCreatedAskStruct extends ethereum.Tuple {
  get seller(): Address {
    return this[0].toAddress();
  }

  get sellerFundsRecipient(): Address {
    return this[1].toAddress();
  }

  get askCurrency(): Address {
    return this[2].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[3].toI32();
  }

  get askPrice(): BigInt {
    return this[4].toBigInt();
  }
}

export class AskFilled extends ethereum.Event {
  get params(): AskFilled__Params {
    return new AskFilled__Params(this);
  }
}

export class AskFilled__Params {
  _event: AskFilled;

  constructor(event: AskFilled) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get finder(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get ask(): AskFilledAskStruct {
    return changetype<AskFilledAskStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class AskFilledAskStruct extends ethereum.Tuple {
  get seller(): Address {
    return this[0].toAddress();
  }

  get sellerFundsRecipient(): Address {
    return this[1].toAddress();
  }

  get askCurrency(): Address {
    return this[2].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[3].toI32();
  }

  get askPrice(): BigInt {
    return this[4].toBigInt();
  }
}

export class AskPriceUpdated extends ethereum.Event {
  get params(): AskPriceUpdated__Params {
    return new AskPriceUpdated__Params(this);
  }
}

export class AskPriceUpdated__Params {
  _event: AskPriceUpdated;

  constructor(event: AskPriceUpdated) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ask(): AskPriceUpdatedAskStruct {
    return changetype<AskPriceUpdatedAskStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class AskPriceUpdatedAskStruct extends ethereum.Tuple {
  get seller(): Address {
    return this[0].toAddress();
  }

  get sellerFundsRecipient(): Address {
    return this[1].toAddress();
  }

  get askCurrency(): Address {
    return this[2].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[3].toI32();
  }

  get askPrice(): BigInt {
    return this[4].toBigInt();
  }
}

export class ExchangeExecuted extends ethereum.Event {
  get params(): ExchangeExecuted__Params {
    return new ExchangeExecuted__Params(this);
  }
}

export class ExchangeExecuted__Params {
  _event: ExchangeExecuted;

  constructor(event: ExchangeExecuted) {
    this._event = event;
  }

  get userA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get a(): ExchangeExecutedAStruct {
    return changetype<ExchangeExecutedAStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }

  get b(): ExchangeExecutedBStruct {
    return changetype<ExchangeExecutedBStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class ExchangeExecutedAStruct extends ethereum.Tuple {
  get tokenContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }
}

export class ExchangeExecutedBStruct extends ethereum.Tuple {
  get tokenContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }
}

export class RoyaltyPayout extends ethereum.Event {
  get params(): RoyaltyPayout__Params {
    return new RoyaltyPayout__Params(this);
  }
}

export class RoyaltyPayout__Params {
  _event: RoyaltyPayout;

  constructor(event: RoyaltyPayout) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ZoraAsk__askForNFTResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: i32;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: i32,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getSeller(): Address {
    return this.value0;
  }

  getSellerFundsRecipient(): Address {
    return this.value1;
  }

  getAskCurrency(): Address {
    return this.value2;
  }

  getFindersFeeBps(): i32 {
    return this.value3;
  }

  getAskPrice(): BigInt {
    return this.value4;
  }
}

export class ZoraAsk extends ethereum.SmartContract {
  static bind(address: Address): ZoraAsk {
    return new ZoraAsk("ZoraAsk", address);
  }

  askForNFT(param0: Address, param1: BigInt): ZoraAsk__askForNFTResult {
    let result = super.call(
      "askForNFT",
      "askForNFT(address,uint256):(address,address,address,uint16,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new ZoraAsk__askForNFTResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toI32(),
      result[4].toBigInt()
    );
  }

  try_askForNFT(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<ZoraAsk__askForNFTResult> {
    let result = super.tryCall(
      "askForNFT",
      "askForNFT(address,uint256):(address,address,address,uint16,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ZoraAsk__askForNFTResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toI32(),
        value[4].toBigInt()
      )
    );
  }

  erc20TransferHelper(): Address {
    let result = super.call(
      "erc20TransferHelper",
      "erc20TransferHelper():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_erc20TransferHelper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc20TransferHelper",
      "erc20TransferHelper():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  erc721TransferHelper(): Address {
    let result = super.call(
      "erc721TransferHelper",
      "erc721TransferHelper():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_erc721TransferHelper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc721TransferHelper",
      "erc721TransferHelper():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  registrar(): Address {
    let result = super.call("registrar", "registrar():(address)", []);

    return result[0].toAddress();
  }

  try_registrar(): ethereum.CallResult<Address> {
    let result = super.tryCall("registrar", "registrar():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _erc20TransferHelper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc721TransferHelper(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _protocolFeeSettings(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _wethAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _handleRoyaltyEnginePayoutCall extends ethereum.Call {
  get inputs(): _handleRoyaltyEnginePayoutCall__Inputs {
    return new _handleRoyaltyEnginePayoutCall__Inputs(this);
  }

  get outputs(): _handleRoyaltyEnginePayoutCall__Outputs {
    return new _handleRoyaltyEnginePayoutCall__Outputs(this);
  }
}

export class _handleRoyaltyEnginePayoutCall__Inputs {
  _call: _handleRoyaltyEnginePayoutCall;

  constructor(call: _handleRoyaltyEnginePayoutCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payoutCurrency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class _handleRoyaltyEnginePayoutCall__Outputs {
  _call: _handleRoyaltyEnginePayoutCall;

  constructor(call: _handleRoyaltyEnginePayoutCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CancelAskCall extends ethereum.Call {
  get inputs(): CancelAskCall__Inputs {
    return new CancelAskCall__Inputs(this);
  }

  get outputs(): CancelAskCall__Outputs {
    return new CancelAskCall__Outputs(this);
  }
}

export class CancelAskCall__Inputs {
  _call: CancelAskCall;

  constructor(call: CancelAskCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelAskCall__Outputs {
  _call: CancelAskCall;

  constructor(call: CancelAskCall) {
    this._call = call;
  }
}

export class CreateAskCall extends ethereum.Call {
  get inputs(): CreateAskCall__Inputs {
    return new CreateAskCall__Inputs(this);
  }

  get outputs(): CreateAskCall__Outputs {
    return new CreateAskCall__Outputs(this);
  }
}

export class CreateAskCall__Inputs {
  _call: CreateAskCall;

  constructor(call: CreateAskCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _askPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _askCurrency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _sellerFundsRecipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _findersFeeBps(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class CreateAskCall__Outputs {
  _call: CreateAskCall;

  constructor(call: CreateAskCall) {
    this._call = call;
  }
}

export class FillAskCall extends ethereum.Call {
  get inputs(): FillAskCall__Inputs {
    return new FillAskCall__Inputs(this);
  }

  get outputs(): FillAskCall__Outputs {
    return new FillAskCall__Outputs(this);
  }
}

export class FillAskCall__Inputs {
  _call: FillAskCall;

  constructor(call: FillAskCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _fillCurrency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _fillAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _finder(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class FillAskCall__Outputs {
  _call: FillAskCall;

  constructor(call: FillAskCall) {
    this._call = call;
  }
}

export class SetAskPriceCall extends ethereum.Call {
  get inputs(): SetAskPriceCall__Inputs {
    return new SetAskPriceCall__Inputs(this);
  }

  get outputs(): SetAskPriceCall__Outputs {
    return new SetAskPriceCall__Outputs(this);
  }
}

export class SetAskPriceCall__Inputs {
  _call: SetAskPriceCall;

  constructor(call: SetAskPriceCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _askPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _askCurrency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class SetAskPriceCall__Outputs {
  _call: SetAskPriceCall;

  constructor(call: SetAskPriceCall) {
    this._call = call;
  }
}

export class SetRoyaltyEngineAddressCall extends ethereum.Call {
  get inputs(): SetRoyaltyEngineAddressCall__Inputs {
    return new SetRoyaltyEngineAddressCall__Inputs(this);
  }

  get outputs(): SetRoyaltyEngineAddressCall__Outputs {
    return new SetRoyaltyEngineAddressCall__Outputs(this);
  }
}

export class SetRoyaltyEngineAddressCall__Inputs {
  _call: SetRoyaltyEngineAddressCall;

  constructor(call: SetRoyaltyEngineAddressCall) {
    this._call = call;
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltyEngineAddressCall__Outputs {
  _call: SetRoyaltyEngineAddressCall;

  constructor(call: SetRoyaltyEngineAddressCall) {
    this._call = call;
  }
}
